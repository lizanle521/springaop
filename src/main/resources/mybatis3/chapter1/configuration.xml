<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <properties resource="mybatis3/chapter1/db.properties"></properties>
    <settings>
        <!-- 对在此配置文件下的所有 cache 进行全
        局性开/关设置。 -->
        <setting name="cacheEnabled" value="true"/>
        <!-- 全局性设置懒加载。如果设为‘关’，
        则所有相关联的都会被初始化加载 -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!-- 当设置为‘开’的时候，懒加载的对象
        可能被任何懒属性全部加载。否则，每
        个属性都按需加载。 -->
        <setting name="aggressiveLazyLoading" value="true"/>
        <!-- 允许和不允许单条语句返回多个数据
        集（取决于驱动需求） -->
        <setting name="multipleResultSetsEnabled" value="true"/>
        <!-- 使用列标签代替列名称。不用的驱动器
        有不同的作法。参考一下驱动器文档，
        或者用这两个不同的选项进行测试一
        下。 -->
        <setting name="useColumnLabel" value="true"/>
        <!-- 允许 JDBC 生成主键。需要驱动器支持。
        如果设为了 true，这个设置将强制使用
        被生成的主键，有一些驱动器不兼容不
        过仍然可以执行。 -->
        <setting name="useGeneratedKeys" value="false"/>
        <!-- 配置和设定执行器，SIMPLE 执行器执
        行其它语句。REUSE 执行器可能重复
        使用 prepared statements 语句，BATCH
        执行器可以重复执行语句和批量更新  默认值 SIMPLE REUSE  BATCH-->
        <setting name="defaultExecutorType" value="SIMPLE"/>
        <!--  指定 MyBatis 是否并且如何来自动映射
        数据表字段与对象的属性。PART IAL
        将只自动映射简单的，没有嵌套的结
        果。FULL 将自动映射所有复杂的结果.默认值 NONE,PARTIAL ,FULL-->
        <setting name="autoMappingBehavior" value="FULL"/>
        <!-- 设置一个时限，以决定让驱动器等待数
        据库回应的多长时间为超时 -->
        <setting name="defaultStatementTimeout" value="25000"/>
    </settings>
    <typeAliases>
        <typeAlias type="com.lzl.mybatis3.chapter1.MyselfDefineDataSourceFactory" alias="DRUID"/>
    </typeAliases>
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
                <property name="poolMaximumIdleConnections" value="5"/>
                <property name="poolMaximumActiveConnections" value="20"/>
                <property name="poolTimeToWait" value="60000"/>
                <property name="poolPingQuery" value="select 'x'"/>
                <property name="poolPingEnabled" value="true"/>
                <property name="poolPingConnectionsNotUsedFor" value="3000"/>
            </dataSource>
        </environment>
        <environment id="test">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="DRUID">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--
     MyBatis 允许你在已映射语句执行过程中的某一点进行拦截调用。默认情况下，MyBatis 允许使用插件来拦截的方法调用包括：

    Executor (update, query, flushStatements, commit, rollback, getTransaction, close, isClosed)
    ParameterHandler (getParameterObject, setParameters)
    ResultSetHandler (handleResultSets, handleOutputParameters)
    StatementHandler (prepare, parameterize, batch, update, query)
     -->
    <plugins>
        <plugin interceptor=""></plugin>
    </plugins>
    <mappers>
        <mapper resource="com/lzl/mybatis3/chapter1/RecycleMerOrderMapper.xml"/>
    </mappers>

</configuration>